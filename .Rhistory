xend = 1:30),
color = "black") +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(-2.5, 2.5) +
coord_flip()
names(df_fft)
ggplot(tail(df_fft,30), aes(x=1:30,y=Potência, label=Período)) +
geom_point(stat='identity', fill="black", size=6)  +
geom_segment(aes(y = 0,
x = 1:30,
yend = Potência,
xend = 1:30),
color = "black") +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(-2.5, 2.5) +
coord_flip()
tail(df_fft,30)
top30<-rbind(tail(df_fft[which(df_fft$Fonte=="CHIRPS"),],15),df_fft[which(df_fft$Fonte=="ATTO"),],15)
top30<-rbind(tail(df_fft[which(df_fft$Fonte=="CHIRPS"),],15),tail(df_fft[which(df_fft$Fonte=="ATTO"),],15))
ggplot(tail(df_fft,30), aes(x=1:30,y=Potência, label=Período)) +
geom_point(stat='identity', fill="black", size=6)  +
geom_segment(aes(y = 0,
x = 1:30,
yend = Potência,
xend = 1:30),
color = "black") +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(-2.5, 2.5) +
coord_flip()
top30
ggplot(top30, aes(x=1:30,y=Potência, label=Período)) +
geom_point(stat='identity', fill="black", size=6)  +
geom_segment(aes(y = 0,
x = 1:30,
yend = Potência,
xend = 1:30),
color = "black") +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(-2.5, 2.5) +
coord_flip()
ggplot(top30, aes(x=1:30,y=Potência, label=Período)) +
geom_point(stat='identity', fill="black", size=6)  +
geom_segment(aes(y = 0,
x = 1:30,
yend = Potência,
xend = 1:30),
color = "black") +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
top30$Período
as.numeric(top30$Período)
top30<-data.frame(x=30:1,top30)
ggplot(top30, aes(x=x,y=Potência, label=Período)) +
geom_point(stat='identity', fill="black", size=6)  +
geom_segment(aes(y = 0,
x = 1:30,
yend = Potência,
xend = 1:30),
color = "black") +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
top30<-rbind(tail(df_fft[which(df_fft$Fonte=="CHIRPS"),],15),tail(df_fft[which(df_fft$Fonte=="ATTO"),],15))
top30<-data.frame(x=30:1,top30)
ggplot(top30, aes(x=x,y=Potência, label=Período)) +
geom_point(stat='identity', fill="black", size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = Potência,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
ggplot(top30, aes(x=x,y=Potência, label=Período,colour=Fonte)) +
geom_point(stat='identity', fill="black", size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = Potência,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
ggplot(top30, aes(x=x,y=Potência, label=Período,colour=Fonte)) +
geom_point(stat='identity', fill="black", size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = Potência,
xend = x),
color = Fonte) +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
top30
ts_chirps<-ts(chirps$V1,frequency = 365*2)
plot(ts_chirps)
fft<-spec.pgram(ts_chirps)
fft<-data.frame(fft$freq,fft$spec)
fft<-fft[order(as.numeric(fft$fft.spec)),]
fft_chirps<-fft
ts_atto<-ts(atto$V2,frequency=365*2)
fft<-spec.pgram(ts_atto)
fft<-data.frame(fft$freq,fft$spec)
fft<-fft[order(as.numeric(fft$fft.spec)),]
fft_atto<-fft
plot(fft_atto$fft.freq,fft_chirps$fft.freq)
df_fft<-data.frame(rbind(fft_chirps,fft_atto),source=c(rep("CHIRPS",375),rep("ATTO",375)))
df_fft$fft.freq<-1/df_fft$fft.freq
df_fft<-droplevels(df_fft)
names(df_fft)<-c("Período","Potência","Fonte")
#df_fft<-tail(df_fft,30)
#names(df_fft)<-c("freq_chirps","spec_chirps","freq_atto","spec_atto")
plot(df_fft$fft.freq,df_fft$fft.spec,col=unlist(df_fft$source))
lines(df_fft$freq_chirps,type="p",col="red")
plot(df_fft$spec_chirps)
lines(df_fft$spec_atto)
hist(df_fft$spec_atto,nclass = 30)
theme_set(theme_bw())
ggplot(df_fft,aes(y=Potência,x=1:750,colour=Fonte))+geom_line()
theme_set(theme_classic())
tail(df_fft)
top30<-rbind(tail(df_fft[which(df_fft$Fonte=="CHIRPS"),],15),tail(df_fft[which(df_fft$Fonte=="ATTO"),],15))
top30<-data.frame(x=30:1,top30)
ggplot(top30, aes(x=x,y=Potência, label=Período,colour=Fonte)) +
geom_point(stat='identity', size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = Potência,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="Diverging Lollipop Chart",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
as.character(top30$Período)
ts_atto<-ts(atto$V2,frequency=365*2)
fft<-spec.pgram(ts_atto)
fft<-data.frame(fft$freq,fft$spec)
fft<-fft[order(as.numeric(fft$fft.spec)),]
fft_atto<-fft
plot(fft_atto$fft.freq,fft_chirps$fft.freq)
df_fft<-data.frame(rbind(fft_chirps,fft_atto),source=c(rep("CHIRPS",375),rep("ATTO",375)))
df_fft$fft.freq<-1/df_fft$fft.freq
df_fft<-droplevels(df_fft)
f_fft$fft.freq
df_fft$fft.freq
tail(df_fft)
ts_chirps<-ts(chirps$V1,frequency = 1)
plot(ts_chirps)
fft<-spec.pgram(ts_chirps)
fft<-data.frame(fft$freq,fft$spec)
fft<-fft[order(as.numeric(fft$fft.spec)),]
fft_chirps<-fft
ts_atto<-ts(atto$V2,frequency=1)
fft<-spec.pgram(ts_atto)
fft<-data.frame(fft$freq,fft$spec)
fft<-fft[order(as.numeric(fft$fft.spec)),]
fft_atto<-fft
plot(fft_atto$fft.freq,fft_chirps$fft.freq)
df_fft<-data.frame(rbind(fft_chirps,fft_atto),source=c(rep("CHIRPS",375),rep("ATTO",375)))
df_fft$fft.freq<-1/df_fft$fft.freq
df_fft<-droplevels(df_fft)
tail(df_fft)
plot(fft_atto$fft.freq,fft_chirps$fft.freq)
df_fft<-data.frame(rbind(fft_chirps,fft_atto),source=c(rep("CHIRPS",375),rep("ATTO",375)))
df_fft$fft.freq<-1/df_fft$fft.freq
df_fft<-droplevels(df_fft)
names(df_fft)<-c("Período","Potência","Fonte")
#df_fft<-tail(df_fft,30)
#names(df_fft)<-c("freq_chirps","spec_chirps","freq_atto","spec_atto")
plot(df_fft$fft.freq,df_fft$fft.spec,col=unlist(df_fft$source))
lines(df_fft$freq_chirps,type="p",col="red")
plot(df_fft$spec_chirps)
lines(df_fft$spec_atto)
hist(df_fft$spec_atto,nclass = 30)
library(ggplot2)
theme_set(theme_bw())
ggplot(df_fft,aes(y=Potência,x=1:750,colour=Fonte))+geom_line()
theme_set(theme_classic())
tail(df_fft)
top30<-rbind(tail(df_fft[which(df_fft$Fonte=="CHIRPS"),],15),tail(df_fft[which(df_fft$Fonte=="ATTO"),],15))
top30<-data.frame(x=30:1,top30)
ggplot(top30, aes(x=x,y=Potência, label=Período,colour=Fonte)) +
geom_point(stat='identity', size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = Potência,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
ts_chirps<-ts(chirps$V1,frequency = 1)
plot(ts_chirps)
fft<-spec.pgram(ts_chirps)
fft<-data.frame(fft$freq,fft$spec)
fft<-fft[order(as.numeric(fft$fft.spec)),]
fft_chirps<-fft
ts_atto<-ts(atto$V2,frequency=1)
fft<-spec.pgram(ts_atto)
fft<-data.frame(fft$freq,fft$spec)
fft<-fft[order(as.numeric(fft$fft.spec)),]
fft_atto<-fft
plot(fft_atto$fft.freq,fft_chirps$fft.freq)
df_fft<-data.frame(rbind(fft_chirps,fft_atto),source=c(rep("CHIRPS",375),rep("ATTO",375)))
df_fft$fft.freq<-1/df_fft$fft.freq
df_fft<-droplevels(df_fft)
names(df_fft)<-c("Período","Potência","Fonte")
#df_fft<-tail(df_fft,30)
#names(df_fft)<-c("freq_chirps","spec_chirps","freq_atto","spec_atto")
plot(df_fft$fft.freq,df_fft$fft.spec,col=unlist(df_fft$source))
theme_set(theme_bw())
ggplot(df_fft,aes(y=Potência,x=1:750,colour=Fonte))+geom_line()
theme_set(theme_classic())
tail(df_fft)
top30<-rbind(tail(df_fft[which(df_fft$Fonte=="CHIRPS"),],15),tail(df_fft[which(df_fft$Fonte=="ATTO"),],15))
top30
top30<-data.frame(x=30:1,top30)
ggplot(top30, aes(x=x,y=Potência, label=Período,colour=Fonte)) +
geom_point(stat='identity', size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = Potência,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
top30
top30
ggplot(top30, aes(x=x,y=Potência, label=Período,colour=Fonte)) +
geom_point(stat='identity', size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = Potência,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
top30$Período
top30$Potência
class(top30$Potência)
fft<-spec.pgram(ts_atto)
fft<-data.frame(fft$freq,fft$spec)
fft<-fft[order(as.numeric(fft$fft.spec)),]
fft_atto<-fft
plot(fft_atto$fft.freq,fft_chirps$fft.freq)
df_fft<-data.frame(rbind(fft_chirps,fft_atto),source=c(rep("CHIRPS",375),rep("ATTO",375)))
df_fft$fft.freq<-1/df_fft$fft.freq
df_fft<-droplevels(df_fft)
names(df_fft)<-c("Período","Potência","Fonte")
#df_fft<-tail(df_fft,30)
#names(df_fft)<-c("freq_chirps","spec_chirps","freq_atto","spec_atto")
plot(df_fft$fft.freq,df_fft$fft.spec,col=unlist(df_fft$source))
lines(df_fft$freq_chirps,type="p",col="red")
plot(df_fft$spec_chirps)
lines(df_fft$spec_atto)
hist(df_fft$spec_atto,nclass = 30)
theme_set(theme_bw())
ggplot(df_fft,aes(y=Potência,x=1:750,colour=Fonte))+geom_line()
theme_set(theme_classic())
tail(df_fft)
top30<-rbind(tail(df_fft[which(df_fft$Fonte=="CHIRPS"),],15),tail(df_fft[which(df_fft$Fonte=="ATTO"),],15))
top30<-data.frame(x=30:1,top30)
ggplot(top30, aes(x=x,y=Potência, label=Período,colour=Fonte)) +
geom_point(stat='identity', size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = Potência,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
plot(top30)
names(top30)
names(top30)<-c("x","periodo","potencia","fonte")
ggplot(top30, aes(x=x,y=potencia, label=periodo,colour=fonte)) +
geom_point(stat='identity', size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = Potência,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
ggplot(top30, aes(x=x,y=potencia, label=periodo,colour=fonte)) +
geom_point(stat='identity', size=6)  +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
ggplot(top30, aes(x=x,y=potencia, label=periodo,colour=fonte))
ggplot(top30, aes(x=x,y=potencia, label=periodo,colour=fonte))+geom_point()
ggplot(top30, aes(x=x,y=potencia, label=periodo,colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=2) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
ggplot(top30, aes(x=x,y=potencia, label=periodo,colour=fonte)) +
geom_point(stat='identity', size=6)
ggplot(top30, aes(x=x,y=potencia, label=periodo,colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black")
ggplot(top30, aes(x=x,y=potencia, label=periodo,colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=2)
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=2)
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="black", size=2)
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=3)
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=3) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10) +
coord_flip()
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=3) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 10)
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=3) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop")
tail(top30)
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=3) +
labs(title="",
subtitle="Normalized mileage from 'mtcars': Lollipop") +
ylim(0, 3500) +
coord_flip()
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=3) +
labs(title="Comparação entre as potências de cada período",
subtitle="") +
ylim(0, 3500) +
coord_flip()
pdf("~/espectro.pdf")
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=3) +
labs(title="Comparação entre as potências de cada período",
subtitle="") +
ylim(0, 3500) +
coord_flip()
dev.off
dev.off()
ggplot(top30, aes(x=x,y=potencia, label=round(periodo),colour=fonte)) +
geom_point(stat='identity', size=6) +
geom_segment(aes(y = 0,
x = x,
yend = potencia,
xend = x),
color = "black") +
geom_text(color="white", size=3) +
labs(title="Comparação entre as potências de cada período",
subtitle="") +
ylim(0, 3500)
install.packages("corrplot")
install.packages('corrplot')
df_sp <- read.table("dados/inmet_saopaulo.txt",skip = 16, header = TRUE, sep = ";", row.names = NULL)
df_sp$X <- NULL
df_sp$Estacao <- NULL
summary(df_sp)
df_sp$mes <- sapply(strsplit(x = as.character(df_sp$Data),split = "/"),FUN = '[',2)
df_sp$ano <- sapply(strsplit(x = as.character(df_sp$Data),split = "/"),FUN = '[',3)
library(dplyr)
df_sp$mes <- df_sp$Data %>% as.character() %>% strsplit(split="/") %>% sapply(FUN='[',2)
df_sp$ano <- df_sp$Data %>% as.character() %>% strsplit(split="/") %>% sapply(FUN='[',3)
temp_mensal <- aggregate(TempBulboSeco ~ mes + ano, data = df_sp, mean)
datas <- seq(as.Date("1998-01-01"),as.Date("2017-12-31"),by="month")
plot(x=datas, y=temp_mensal$TempBulboSeco, xlab = "Data", ylab = "Temperatura ºC",type = "l")
df_sp_num <- df_sp[,c(-1,-2,-10,-11)]
cor(df_sp_num)
m_cor <- df_sp_num %>% na.omit() %>% cor()
corrplot.mixed(m_cor, lower.col = "black", number.cex = .7)
library(corrplot)
corrplot.mixed(m_cor, lower.col = "black", number.cex = .7)
help("read.table")
names(df_sp)
df_lm <- df_sp[ , c(3,4,5,6,7,8,9)]
normalize <- function (x) {
x/max(x,na.rm = TRUE)
}
df_lm <- as.data.frame(apply(df_lm, 2, normalize)) # estamos aplicando o as.data.frame pois o apply retorna uma matriz
modLinear <- lm(TempBulboSeco ~ PressaoAtmEstacao, data = df_lm)
summary(modLinear)
plot(x = df_lm$PressaoAtmEstacao, y = df_lm$TempBulboSeco, xlim = c(0,2), ylim = c(0,2))
abline(a = modLinear$coefficients[1], b = modLinear$coefficients[2], col = "red")
plot(x = df_lm$PressaoAtmEstacao, y = df_lm$TempBulboSeco)
abline(a = modLinear$coefficients[1], b = modLinear$coefficients[2], col = "red")
oAtmEstacao, y = df_lm$TempBulboSeco)
plot(x = df_lm$PressaoAtmEstacao, y = df_lm$TempBulboSeco)
source('/media/gabriel/Novo volume/Curso-R/curso-R/build_site.R', echo=TRUE)
levelplot(prec_AS[[1]], margin = FALSE)
source('/media/gabriel/Novo volume/Curso-R/curso-R/build_site.R', echo=TRUE)
detach("package:plyr", unload=TRUE)
detach("package:ggbiplot", unload=TRUE)
detach("package:dplyr", unload=TRUE)
source('/media/gabriel/Novo volume/Curso-R/curso-R/build_site.R', echo=TRUE)
